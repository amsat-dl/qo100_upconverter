diff --git a/src/driver/base/i2c.c b/src/driver/base/i2c.c
--- a/src/driver/base/i2c.c
+++ b/src/driver/base/i2c.c
@@ -1,5 +1,4 @@
 #include <config.h>
-#include <mtstd/errorcodes.h>
 #include "i2c.h"
 
 //
diff --git a/src/driver/gpio.h b/src/driver/gpio.h
--- a/src/driver/gpio.h
+++ b/src/driver/gpio.h
@@ -22,8 +22,11 @@
 typedef const gpio_pin_def *gpio_pin;
 
 //helper macros
-#define GPIO_DEFINE_PIN(name, port, pin) \
-	static const gpio_pin_def name##_DEF = {&PORT##port, &TRIS##port, (1<<pin)}; \
-	static const gpio_pin     name       = &name##_DEF;
+#define GPIO_DEFINE_PIN_C(name, port, pin) \
+	const gpio_pin_def name##_DEF = {&PORT##port, &TRIS##port, (1<<pin)}; \
+	const gpio_pin     name       = &name##_DEF;
+
+#define GPIO_DEFINE_PIN_H(name) \
+	extern const gpio_pin     name;
 
 //gpio functions
@@ -28,15 +31,14 @@
 
 //gpio functions
-static inline void gpio_set_direction(gpio_pin pin, u8 out) {
-	if(out) *(pin->pTRIS) &= ~pin->mask;
-	else    *(pin->pTRIS) |= pin->mask;
-}
-static inline void gpio_set_output(gpio_pin pin, u8 out) {
-	if(out) *(pin->pPORT) |=  pin->mask;
-	else    *(pin->pPORT) &= ~pin->mask;
-}
-static inline u8 gpio_get_input(gpio_pin pin) {
-	return (*(pin->pPORT) & pin->mask) != 0;
-}
+#define gpio_set_direction(pin, dir) \
+        if(dir) { *(pin->pTRIS) &= ~pin->mask; } \
+        else    { *(pin->pTRIS) |= pin->mask; }
+
+#define gpio_set_output(pin, lvl) \
+        if(lvl) { *(pin->pPORT) |=  pin->mask; } \
+        else    { *(pin->pPORT) &= ~pin->mask; }
+
+#define gpio_get_input(pin) ((*(pin->pPORT) & pin->mask) != 0)
+
 
 #endif // __DRIVER_GPIO_H__
diff --git a/src/driver/lnb.c b/src/driver/lnb.c
--- a/src/driver/lnb.c
+++ b/src/driver/lnb.c
@@ -11,6 +11,8 @@
 {
     int res = i2c_probe_addr(i2c, addr);
     if(res == 0) {
+        u8 value;
+
         //14V 0x04
         //18V 0x08
         res = smbus8_write_byte(i2c, addr, LNB_REG_DATA1, 0x84);
@@ -14,6 +16,17 @@
         //14V 0x04
         //18V 0x08
         res = smbus8_write_byte(i2c, addr, LNB_REG_DATA1, 0x84);
+        if(res != 0) return res;
+        res = smbus8_read_byte(i2c, addr, LNB_REG_DATA4, &value);
+        if(res != 0) return res;
+        value |= (1<<6) | (1<<3);
+        res = smbus8_write_byte(i2c, addr, LNB_REG_DATA4, value);
+        if(res != 0) return res;
+        res = smbus8_read_byte(i2c, addr, LNB_REG_DATA3, &value);
+        if(res != 0) return res;
+        value |= (1<<2) | (1<<6);
+        res = smbus8_write_byte(i2c, addr, LNB_REG_DATA3, value);
+        if(res != 0) return res;
     } else {
         printf("LNB Chip not found!\n");
     }
diff --git a/src/pinmap.h b/src/pinmap.h
--- a/src/pinmap.h
+++ b/src/pinmap.h
@@ -4,13 +4,13 @@
 #include <driver/gpio.h>
 
 //port A
-GPIO_DEFINE_PIN(PIN_ADF_LOCK,     A, 0)
-GPIO_DEFINE_PIN(PIN_ADF_CE,       A, 1)
-GPIO_DEFINE_PIN(PIN_ADF_LE,       A, 2)
-GPIO_DEFINE_PIN(PIN_ADF_DATA,     A, 3)
-GPIO_DEFINE_PIN(PIN_ADF_CLK,      A, 4)
-GPIO_DEFINE_PIN(PIN_ADF_MUXOUT,   A, 5)
-GPIO_DEFINE_PIN(PIN_LED_HI_LOW,   A, 6)
-GPIO_DEFINE_PIN(PIN_AD9553_CS,    A, 7)
+GPIO_DEFINE_PIN_H(PIN_ADF_LOCK)
+GPIO_DEFINE_PIN_H(PIN_ADF_CE)
+GPIO_DEFINE_PIN_H(PIN_ADF_LE)
+GPIO_DEFINE_PIN_H(PIN_SIO_DATA)
+GPIO_DEFINE_PIN_H(PIN_SIO_CLK)
+GPIO_DEFINE_PIN_H(PIN_AD9553_RESET)
+GPIO_DEFINE_PIN_H(PIN_LED_HI_LOW)
+GPIO_DEFINE_PIN_H(PIN_AD9553_CS)
 
 //port B
@@ -15,10 +15,10 @@
 
 //port B
-GPIO_DEFINE_PIN(PIN_LNBQRG2,      B, 0)
-GPIO_DEFINE_PIN(PIN_SJ3,          B, 1)
-GPIO_DEFINE_PIN(PIN_SJ4,          B, 2)
-GPIO_DEFINE_PIN(PIN_SJ5,          B, 3)
-GPIO_DEFINE_PIN(PIN_SJ6,          B, 4)
-GPIO_DEFINE_PIN(PIN_LNBQRG1,      B, 5)
+GPIO_DEFINE_PIN_H(PIN_LNB_QRG2)
+GPIO_DEFINE_PIN_H(PIN_SJ3)
+GPIO_DEFINE_PIN_H(PIN_SJ4)
+GPIO_DEFINE_PIN_H(PIN_SJ5)
+GPIO_DEFINE_PIN_H(PIN_SJ6)
+GPIO_DEFINE_PIN_H(PIN_LNB_QRG1)
 
 //port C
@@ -23,12 +23,12 @@
 
 //port C
-GPIO_DEFINE_PIN(PIN_LED_CPU_OK,   C, 0)
-GPIO_DEFINE_PIN(PIN_LED_ADF_LOCK, C, 1)
-GPIO_DEFINE_PIN(PIN_LED_LNB_GOOD, C, 2)
-GPIO_DEFINE_PIN(PIN_I2C_SCL,      C, 3)
-GPIO_DEFINE_PIN(PIN_I2C_SDA,      C, 4)
-GPIO_DEFINE_PIN(PIN_LNB_FAULT,    C, 5)
-GPIO_DEFINE_PIN(PIN_USART_TX,     C, 6)
-GPIO_DEFINE_PIN(PIN_USART_RX,     C, 7)
+GPIO_DEFINE_PIN_H(PIN_LED_CPU_OK)
+GPIO_DEFINE_PIN_H(PIN_LED_ADF_LOCK)
+GPIO_DEFINE_PIN_H(PIN_LED_LNB_GOOD)
+GPIO_DEFINE_PIN_H(PIN_I2C_SCL)
+GPIO_DEFINE_PIN_H(PIN_I2C_SDA)
+GPIO_DEFINE_PIN_H(PIN_LNB_FAULT)
+GPIO_DEFINE_PIN_H(PIN_USART_TX)
+GPIO_DEFINE_PIN_H(PIN_USART_RX)
         
 #endif //__PINMAP_H__
