diff --git a/nbproject/configurations.xml b/nbproject/configurations.xml
--- a/nbproject/configurations.xml
+++ b/nbproject/configurations.xml
@@ -42,6 +42,7 @@
         <itemPath>src/driver/irq.c</itemPath>
       </logicalFolder>
       <itemPath>src/main.c</itemPath>
+      <itemPath>src/pinmap.c</itemPath>
     </logicalFolder>
     <logicalFolder name="ExternalFiles"
                    displayName="Important Files"
diff --git a/src/driver/adf4351.c b/src/driver/adf4351.c
--- a/src/driver/adf4351.c
+++ b/src/driver/adf4351.c
@@ -1,9 +1,6 @@
 #include <config.h>
-#include <pinmap.h>
-#include <mtstd/errorcodes.h>
-#include <xc.h>
 #include <string.h>
 #include <stdio.h>
 
 #include "adf4351.h"
 
@@ -5,8 +2,9 @@
 #include <string.h>
 #include <stdio.h>
 
 #include "adf4351.h"
 
+#include <pinmap.h>
 
 //
 //prototypes
@@ -42,8 +40,8 @@
 	ctx->pfd  = pfd;
 
 	//init latch enable and chipselect gpios
-    gpio_set_output(PIN_ADF_LE, GPIO_LEVEL_LOW);
-    gpio_set_output(PIN_ADF_CE, GPIO_LEVEL_HIGH);
+    gpio_set_lvl_low(PIN_ADF_LE);
+    gpio_set_lvl_high(PIN_ADF_CE);
 
 	//apply default settings
 	adf4351_default(ctx);
@@ -380,8 +378,8 @@
     //printf("0x%08lX\n", value);
     u32 mask = 0x80000000ULL;
 
-    gpio_set_output(PIN_ADF_CLK, GPIO_LEVEL_LOW);
+    gpio_set_lvl_low(PIN_SIO_CLK);
     __delay_us(1);
 	//write 32bit
     while(mask) {
         if(value&mask) {
@@ -384,6 +382,6 @@
     __delay_us(1);
 	//write 32bit
     while(mask) {
         if(value&mask) {
-            gpio_set_output(PIN_ADF_DATA, GPIO_LEVEL_HIGH);
+            gpio_set_lvl_high(PIN_SIO_DATA);
         } else {
@@ -389,4 +387,4 @@
         } else {
-            gpio_set_output(PIN_ADF_DATA, GPIO_LEVEL_LOW);
+            gpio_set_lvl_low(PIN_SIO_DATA);
         }
         __delay_us(1);
@@ -391,4 +389,4 @@
         }
         __delay_us(1);
-        gpio_set_output(PIN_ADF_CLK, GPIO_LEVEL_HIGH);
+        gpio_set_lvl_high(PIN_SIO_CLK);
         __delay_us(1);
@@ -394,8 +392,8 @@
         __delay_us(1);
-        gpio_set_output(PIN_ADF_CLK, GPIO_LEVEL_LOW);
+        gpio_set_lvl_low(PIN_SIO_CLK);
         __delay_us(1);
         //next bit
         mask >>= 1;
     }
 
 	//pulse latch-enable
@@ -396,8 +394,8 @@
         __delay_us(1);
         //next bit
         mask >>= 1;
     }
 
 	//pulse latch-enable
-	gpio_set_output(PIN_ADF_LE, GPIO_LEVEL_HIGH);
+	gpio_set_lvl_high(PIN_ADF_LE);
 	__delay_us(1);
@@ -403,4 +401,4 @@
 	__delay_us(1);
-	gpio_set_output(PIN_ADF_LE, GPIO_LEVEL_LOW);
+	gpio_set_lvl_low(PIN_ADF_LE);
 	__delay_us(50);
 }
diff --git a/src/driver/base/i2c.c b/src/driver/base/i2c.c
--- a/src/driver/base/i2c.c
+++ b/src/driver/base/i2c.c
@@ -1,5 +1,4 @@
 #include <config.h>
-#include <mtstd/errorcodes.h>
 #include "i2c.h"
 
 //
diff --git a/src/driver/gpio.h b/src/driver/gpio.h
--- a/src/driver/gpio.h
+++ b/src/driver/gpio.h
@@ -1,16 +1,6 @@
 #ifndef __DRIVER_GPIO_H__
 #define __DRIVER_GPIO_H__
 
-typedef enum {
-	GPIO_DIR_IN  = 0,
-	GPIO_DIR_OUT = 1,
-} gpio_direction;
-
-typedef enum {
-	GPIO_LEVEL_LOW = 0,
-	GPIO_LEVEL_HIGH = 1,
-} gpio_level;
-
 //gpio-pin-definition
 typedef struct gpio_pin_def {
 	volatile unsigned char *pPORT;
@@ -22,8 +12,11 @@
 typedef const gpio_pin_def *gpio_pin;
 
 //helper macros
-#define GPIO_DEFINE_PIN(name, port, pin) \
-	static const gpio_pin_def name##_DEF = {&PORT##port, &TRIS##port, (1<<pin)}; \
-	static const gpio_pin     name       = &name##_DEF;
+#define GPIO_DEFINE_PIN_C(name, port, pin) \
+	const gpio_pin_def name##_DEF = {&PORT##port, &TRIS##port, (1<<pin)}; \
+	const gpio_pin     name       = &name##_DEF;
+
+#define GPIO_DEFINE_PIN_H(name) \
+	extern const gpio_pin     name;
 
 //gpio functions
@@ -28,15 +21,10 @@
 
 //gpio functions
-static inline void gpio_set_direction(gpio_pin pin, u8 out) {
-	if(out) *(pin->pTRIS) &= ~pin->mask;
-	else    *(pin->pTRIS) |= pin->mask;
-}
-static inline void gpio_set_output(gpio_pin pin, u8 out) {
-	if(out) *(pin->pPORT) |=  pin->mask;
-	else    *(pin->pPORT) &= ~pin->mask;
-}
-static inline u8 gpio_get_input(gpio_pin pin) {
-	return (*(pin->pPORT) & pin->mask) != 0;
-}
+#define gpio_set_dir_in(pin)  *((pin)->pTRIS) |=  (pin)->mask
+#define gpio_set_dir_out(pin) *((pin)->pTRIS) &= ~(pin)->mask
+#define gpio_set_lvl_low(pin)     *((pin)->pPORT) |=  (pin)->mask
+#define gpio_set_lvl_high(pin)    *((pin)->pPORT) &= ~(pin)->mask
+#define gpio_get_input(pin) ((*((pin)->pPORT) & (pin)->mask) != 0)
+
 
 #endif // __DRIVER_GPIO_H__
diff --git a/src/main.c b/src/main.c
--- a/src/main.c
+++ b/src/main.c
@@ -83,7 +83,7 @@
 static u8 g_applied_cmd = 0xFF;
 static adf4351_ctx g_adf4351;
 static i2c_data_native g_i2c_bus;
-static int g_ipc = ADF4351_ICP_031;
+static int g_ipc = ADF4351_ICP_188;
 static int g_pout = ADF4351_POUT_1;
 static char g_cmd_buf[10];
 static int  g_cmd_buf_pos = 0;
@@ -134,7 +134,11 @@
     i2c_native_init(&g_i2c_bus, 100000);
     lnb_good = lnb_configure((i2c_dev)&g_i2c_bus, I2C_ADDR_LNBH26);
     //set lnb good led
-    gpio_set_output(PIN_LED_LNB_GOOD, (lnb_good==0)?0:1);
+    if(lnb_good) {
+        gpio_set_lvl_high(PIN_LED_LNB_GOOD);
+    } else {
+        gpio_set_lvl_low(PIN_LED_LNB_GOOD);
+    }
     adf4351_init(&g_adf4351, 40000ULL, 40000ULL);
     adf4351_set_tune(&g_adf4351, g_ipc, g_pout, TRUE);
     init_switch();
@@ -253,7 +257,11 @@
 {
     //update cpu alive led more or less every second (~250ms*4)
     if(g_cpu_led_update_cnt++ >= 4) {
-        gpio_set_output(PIN_LED_CPU_OK, gpio_get_input(PIN_LED_CPU_OK)?0:1);
+        if(gpio_get_input(PIN_LED_CPU_OK)) {
+            gpio_set_lvl_low(PIN_LED_CPU_OK);
+        } else {
+            gpio_set_lvl_high(PIN_LED_CPU_OK);
+        }
         g_cpu_led_update_cnt = 0;
     }
     //update hi/low led
@@ -257,5 +265,9 @@
         g_cpu_led_update_cnt = 0;
     }
     //update hi/low led
-    gpio_set_output(PIN_LED_HI_LOW, (g_applied_cmd>4)?1:0);
+    if(g_applied_cmd > 4) {
+        gpio_set_lvl_high(PIN_LED_HI_LOW);
+    } else {
+        gpio_set_lvl_low(PIN_LED_HI_LOW);
+    }
     //update ADF lock led
@@ -261,6 +273,15 @@
     //update ADF lock led
-    gpio_set_output(PIN_LED_ADF_LOCK, (adf4351_get_lock(&g_adf4351)==FALSE)?1:0);
+    if(adf4351_get_lock(&g_adf4351) == FALSE) {
+        gpio_set_lvl_high(PIN_LED_ADF_LOCK);
+    } else {
+        gpio_set_lvl_low(PIN_LED_ADF_LOCK);
+    }
+    if(gpio_get_input(PIN_LNB_FAULT)) {
+        gpio_set_lvl_low(PIN_LED_LNB_GOOD);
+    } else {
+        gpio_set_lvl_high(PIN_LED_LNB_GOOD);
+    }
 }
 
 static void handle_cmd(u8 cmd)
 {
@@ -263,8 +284,8 @@
 }
 
 static void handle_cmd(u8 cmd)
 {
-    if((cmd < 10) && (cmd != g_applied_cmd)) {
+    if((cmd != g_applied_cmd) && (cmd < 10)) {
         int timeout = 1000;
 
         adf4351_set_freq(&g_adf4351, freq_table[cmd]);
@@ -287,6 +308,6 @@
     //PORT A
     //
     //ADF4351 Lock Detect
-    gpio_set_direction(PIN_ADF_LOCK, GPIO_DIR_IN);
+    gpio_set_dir_in(PIN_ADF_LOCK);
     
     //ADF4351 Chip Enable
@@ -291,6 +312,6 @@
     
     //ADF4351 Chip Enable
-    gpio_set_output(PIN_ADF_CE, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_ADF_CE, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_ADF_CE);
+    gpio_set_dir_out(PIN_ADF_CE);
     
     //ADF4351 Latch Enable
@@ -295,6 +316,6 @@
     
     //ADF4351 Latch Enable
-    gpio_set_output(PIN_ADF_LE, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_ADF_LE, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_ADF_LE);
+    gpio_set_dir_out(PIN_ADF_LE);
     
     //Serial Data
@@ -299,6 +320,6 @@
     
     //Serial Data
-    gpio_set_output(PIN_ADF_DATA, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_ADF_DATA, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_SIO_DATA);
+    gpio_set_dir_out(PIN_SIO_DATA);
     
     //Serial Clock
@@ -303,5 +324,5 @@
     
     //Serial Clock
-    gpio_set_output(PIN_ADF_CLK, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_ADF_CLK, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_SIO_CLK);
+    gpio_set_dir_out(PIN_SIO_CLK);
 
@@ -307,5 +328,6 @@
 
-    //ADF4351 MUXout
-    gpio_set_direction(PIN_ADF_MUXOUT, GPIO_DIR_IN);
+    //AD9553 Reset
+    gpio_set_lvl_high(PIN_AD9553_RESET);
+    gpio_set_dir_in(PIN_AD9553_RESET);
 
     //LED high/low
@@ -310,6 +332,6 @@
 
     //LED high/low
-    gpio_set_output(PIN_LED_HI_LOW, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_LED_HI_LOW, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_LED_HI_LOW);
+    gpio_set_dir_out(PIN_LED_HI_LOW);
 
     //AD9553 Chip Select
@@ -314,6 +336,7 @@
 
     //AD9553 Chip Select
-    gpio_set_direction(PIN_AD9553_CS, GPIO_DIR_IN);
+    gpio_set_lvl_high(PIN_AD9553_CS);
+    gpio_set_dir_out(PIN_AD9553_CS);
 
 
     //
@@ -322,7 +345,7 @@
     INTCON2bits.nRBPU = 0; //enable internal pull-up on Port B
     
     //LNB-QRG2
-    gpio_set_direction(PIN_LNBQRG2, GPIO_DIR_IN);
-    gpio_set_output(PIN_LNBQRG2, GPIO_LEVEL_HIGH); //pull-up
+    gpio_set_dir_in(PIN_LNB_QRG2);
+    gpio_set_lvl_high(PIN_LNB_QRG2); //pull-up
     
     //SJ3
@@ -327,6 +350,6 @@
     
     //SJ3
-    gpio_set_direction(PIN_SJ3, GPIO_DIR_IN);
-    gpio_set_output(PIN_SJ3, GPIO_LEVEL_HIGH); //pull-up
+    gpio_set_dir_in(PIN_SJ3);
+    gpio_set_lvl_high(PIN_SJ3); //pull-up
 
     //SJ4
@@ -331,6 +354,6 @@
 
     //SJ4
-    gpio_set_direction(PIN_SJ4, GPIO_DIR_IN);
-    gpio_set_output(PIN_SJ4, GPIO_LEVEL_HIGH); //pull-up
+    gpio_set_dir_in(PIN_SJ4);
+    gpio_set_lvl_high(PIN_SJ4); //pull-up
 
     //SJ5
@@ -335,6 +358,6 @@
 
     //SJ5
-    gpio_set_direction(PIN_SJ5, GPIO_DIR_IN);
-    gpio_set_output(PIN_SJ5, GPIO_LEVEL_HIGH); //pull-up
+    gpio_set_dir_in(PIN_SJ5);
+    gpio_set_lvl_high(PIN_SJ5); //pull-up
 
     //SJ6
@@ -339,6 +362,6 @@
 
     //SJ6
-    gpio_set_direction(PIN_SJ6, GPIO_DIR_IN);
-    gpio_set_output(PIN_SJ6, GPIO_LEVEL_HIGH); //pull-up
+    gpio_set_dir_in(PIN_SJ6);
+    gpio_set_lvl_high(PIN_SJ6); //pull-up
 
     //LNB-QRG1
@@ -343,10 +366,10 @@
 
     //LNB-QRG1
-    gpio_set_direction(PIN_LNBQRG1, GPIO_DIR_IN);
-    gpio_set_output(PIN_LNBQRG1, GPIO_LEVEL_HIGH); //pull-up
+    gpio_set_dir_in(PIN_LNB_QRG1);
+    gpio_set_lvl_high(PIN_LNB_QRG1); //pull-up
     
 
     //
     //PORT C
     //
     //LED cpu ok
@@ -347,10 +370,10 @@
     
 
     //
     //PORT C
     //
     //LED cpu ok
-    gpio_set_output(PIN_LED_CPU_OK, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_LED_CPU_OK, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_LED_CPU_OK);
+    gpio_set_dir_out(PIN_LED_CPU_OK);
 
     //LED lock
@@ -355,6 +378,6 @@
 
     //LED lock
-    gpio_set_output(PIN_LED_ADF_LOCK, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_LED_ADF_LOCK, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_LED_ADF_LOCK);
+    gpio_set_dir_out(PIN_LED_ADF_LOCK);
 
     //LED lnb ok
@@ -359,6 +382,6 @@
 
     //LED lnb ok
-    gpio_set_output(PIN_LED_LNB_GOOD, GPIO_LEVEL_LOW);
-    gpio_set_direction(PIN_LED_LNB_GOOD, GPIO_DIR_OUT);
+    gpio_set_lvl_low(PIN_LED_LNB_GOOD);
+    gpio_set_dir_out(PIN_LED_LNB_GOOD);
 
     //I2C scl
@@ -363,6 +386,6 @@
 
     //I2C scl
-    gpio_set_direction(PIN_I2C_SCL, GPIO_DIR_IN);
-    gpio_set_direction(PIN_I2C_SDA, GPIO_DIR_IN);
+    gpio_set_dir_in(PIN_I2C_SCL);
+    gpio_set_dir_in(PIN_I2C_SDA);
 
     //LNBH26 FAULT
@@ -367,5 +390,5 @@
 
     //LNBH26 FAULT
-    gpio_set_direction(PIN_LNB_FAULT, GPIO_DIR_IN);
+    gpio_set_dir_in(PIN_LNB_FAULT);
 
     //Serial TX
@@ -370,5 +393,5 @@
 
     //Serial TX
-    gpio_set_direction(PIN_USART_TX, GPIO_DIR_IN);
+    gpio_set_dir_in(PIN_USART_TX);
 
     //Serial RX
@@ -373,6 +396,6 @@
 
     //Serial RX
-    gpio_set_direction(PIN_USART_RX, GPIO_DIR_IN);
+    gpio_set_dir_in(PIN_USART_RX);
 }
 
 //retarget for printf
diff --git a/src/pinmap.c b/src/pinmap.c
new file mode 100644
--- /dev/null
+++ b/src/pinmap.c
@@ -0,0 +1,30 @@
+#include <config.h>
+#include "pinmap.h"
+
+//port A
+GPIO_DEFINE_PIN_C(PIN_ADF_LOCK,     A, 0)
+GPIO_DEFINE_PIN_C(PIN_ADF_CE,       A, 1)
+GPIO_DEFINE_PIN_C(PIN_ADF_LE,       A, 2)
+GPIO_DEFINE_PIN_C(PIN_SIO_DATA,     A, 3)
+GPIO_DEFINE_PIN_C(PIN_SIO_CLK,      A, 4)
+GPIO_DEFINE_PIN_C(PIN_AD9553_RESET, A, 5)
+GPIO_DEFINE_PIN_C(PIN_LED_HI_LOW,   A, 6)
+GPIO_DEFINE_PIN_C(PIN_AD9553_CS,    A, 7)
+
+//port B
+GPIO_DEFINE_PIN_C(PIN_LNB_QRG2,     B, 0)
+GPIO_DEFINE_PIN_C(PIN_SJ3,          B, 1)
+GPIO_DEFINE_PIN_C(PIN_SJ4,          B, 2)
+GPIO_DEFINE_PIN_C(PIN_SJ5,          B, 3)
+GPIO_DEFINE_PIN_C(PIN_SJ6,          B, 4)
+GPIO_DEFINE_PIN_C(PIN_LNB_QRG1,     B, 5)
+
+//port C
+GPIO_DEFINE_PIN_C(PIN_LED_CPU_OK,   C, 0)
+GPIO_DEFINE_PIN_C(PIN_LED_ADF_LOCK, C, 1)
+GPIO_DEFINE_PIN_C(PIN_LED_LNB_GOOD, C, 2)
+GPIO_DEFINE_PIN_C(PIN_I2C_SCL,      C, 3)
+GPIO_DEFINE_PIN_C(PIN_I2C_SDA,      C, 4)
+GPIO_DEFINE_PIN_C(PIN_LNB_FAULT,    C, 5)
+GPIO_DEFINE_PIN_C(PIN_USART_TX,     C, 6)
+GPIO_DEFINE_PIN_C(PIN_USART_RX,     C, 7)
diff --git a/src/pinmap.h b/src/pinmap.h
--- a/src/pinmap.h
+++ b/src/pinmap.h
@@ -4,13 +4,13 @@
 #include <driver/gpio.h>
 
 //port A
-GPIO_DEFINE_PIN(PIN_ADF_LOCK,     A, 0)
-GPIO_DEFINE_PIN(PIN_ADF_CE,       A, 1)
-GPIO_DEFINE_PIN(PIN_ADF_LE,       A, 2)
-GPIO_DEFINE_PIN(PIN_ADF_DATA,     A, 3)
-GPIO_DEFINE_PIN(PIN_ADF_CLK,      A, 4)
-GPIO_DEFINE_PIN(PIN_ADF_MUXOUT,   A, 5)
-GPIO_DEFINE_PIN(PIN_LED_HI_LOW,   A, 6)
-GPIO_DEFINE_PIN(PIN_AD9553_CS,    A, 7)
+GPIO_DEFINE_PIN_H(PIN_ADF_LOCK)
+GPIO_DEFINE_PIN_H(PIN_ADF_CE)
+GPIO_DEFINE_PIN_H(PIN_ADF_LE)
+GPIO_DEFINE_PIN_H(PIN_SIO_DATA)
+GPIO_DEFINE_PIN_H(PIN_SIO_CLK)
+GPIO_DEFINE_PIN_H(PIN_AD9553_RESET)
+GPIO_DEFINE_PIN_H(PIN_LED_HI_LOW)
+GPIO_DEFINE_PIN_H(PIN_AD9553_CS)
 
 //port B
@@ -15,10 +15,10 @@
 
 //port B
-GPIO_DEFINE_PIN(PIN_LNBQRG2,      B, 0)
-GPIO_DEFINE_PIN(PIN_SJ3,          B, 1)
-GPIO_DEFINE_PIN(PIN_SJ4,          B, 2)
-GPIO_DEFINE_PIN(PIN_SJ5,          B, 3)
-GPIO_DEFINE_PIN(PIN_SJ6,          B, 4)
-GPIO_DEFINE_PIN(PIN_LNBQRG1,      B, 5)
+GPIO_DEFINE_PIN_H(PIN_LNB_QRG2)
+GPIO_DEFINE_PIN_H(PIN_SJ3)
+GPIO_DEFINE_PIN_H(PIN_SJ4)
+GPIO_DEFINE_PIN_H(PIN_SJ5)
+GPIO_DEFINE_PIN_H(PIN_SJ6)
+GPIO_DEFINE_PIN_H(PIN_LNB_QRG1)
 
 //port C
@@ -23,12 +23,12 @@
 
 //port C
-GPIO_DEFINE_PIN(PIN_LED_CPU_OK,   C, 0)
-GPIO_DEFINE_PIN(PIN_LED_ADF_LOCK, C, 1)
-GPIO_DEFINE_PIN(PIN_LED_LNB_GOOD, C, 2)
-GPIO_DEFINE_PIN(PIN_I2C_SCL,      C, 3)
-GPIO_DEFINE_PIN(PIN_I2C_SDA,      C, 4)
-GPIO_DEFINE_PIN(PIN_LNB_FAULT,    C, 5)
-GPIO_DEFINE_PIN(PIN_USART_TX,     C, 6)
-GPIO_DEFINE_PIN(PIN_USART_RX,     C, 7)
+GPIO_DEFINE_PIN_H(PIN_LED_CPU_OK)
+GPIO_DEFINE_PIN_H(PIN_LED_ADF_LOCK)
+GPIO_DEFINE_PIN_H(PIN_LED_LNB_GOOD)
+GPIO_DEFINE_PIN_H(PIN_I2C_SCL)
+GPIO_DEFINE_PIN_H(PIN_I2C_SDA)
+GPIO_DEFINE_PIN_H(PIN_LNB_FAULT)
+GPIO_DEFINE_PIN_H(PIN_USART_TX)
+GPIO_DEFINE_PIN_H(PIN_USART_RX)
         
 #endif //__PINMAP_H__
