diff --git a/nbproject/configurations.xml b/nbproject/configurations.xml
--- a/nbproject/configurations.xml
+++ b/nbproject/configurations.xml
@@ -14,6 +14,7 @@
         <itemPath>src/driver/usart.h</itemPath>
         <itemPath>src/driver/irq.h</itemPath>
         <itemPath>src/driver/gpio.h</itemPath>
+        <itemPath>src/driver/ad9553.h</itemPath>
       </logicalFolder>
       <logicalFolder name="mtcrt" displayName="mtcrt" projectFiles="true">
         <itemPath>src/mtcrt/types.h</itemPath>
@@ -40,5 +41,6 @@
         <itemPath>src/driver/lnb.c</itemPath>
         <itemPath>src/driver/usart.c</itemPath>
         <itemPath>src/driver/irq.c</itemPath>
+        <itemPath>src/driver/ad9553.c</itemPath>
       </logicalFolder>
       <itemPath>src/main.c</itemPath>
@@ -43,5 +45,6 @@
       </logicalFolder>
       <itemPath>src/main.c</itemPath>
+      <itemPath>src/pinmap.c</itemPath>
     </logicalFolder>
     <logicalFolder name="ExternalFiles"
                    displayName="Important Files"
diff --git a/src/driver/ad9553.c b/src/driver/ad9553.c
new file mode 100644
--- /dev/null
+++ b/src/driver/ad9553.c
@@ -0,0 +1,111 @@
+#include <config.h>
+#include <pinmap.h>
+#include <stdio.h>
+
+#include "ad9553.h"
+
+//internal helper
+static void write_data(u16 addr, const u8 *data, int len);
+static void read_data(u16 addr, u8 *data, int len);
+static void write_byte(u8 data);
+static void read_byte(u8 *data);
+
+void ad9553_init(void)
+{
+    u8 data[10];
+    
+    read_data(0x00, data, 10);
+    
+    for(int i=0;i<10;i++) {
+        printf("0x%02X: 0x%02X\n", i, data[i]);
+    }
+}
+
+static void write_data(u16 addr, const u8 *data, int len)
+{
+    u16 frame = ((u16)len<<13) | (addr&0x1FFF) | 3;
+    
+    //set chip select
+    gpio_set_output(PIN_AD9553_CS, GPIO_LEVEL_LOW);
+    __delay_us(1);
+    
+    //write start frame
+    write_byte((frame>>0)&0xFF);
+    write_byte((frame>>8)&0xFF);
+
+    //write data
+    while(len--) {
+        write_byte(*data++);
+    }
+
+    //release chip select
+    gpio_set_output(PIN_AD9553_CS, GPIO_LEVEL_HIGH);
+}
+
+static void read_data(u16 addr, u8 *data, int len)
+{
+    u16 frame = (1u<<15) | ((u16)len<<13) | (addr&0x1FFF) | 3;
+    
+    //set chip select
+    gpio_set_output(PIN_AD9553_CS, GPIO_LEVEL_LOW);
+    __delay_us(1);
+
+    //write start frame
+    write_byte((frame>>0)&0xFF);
+    write_byte((frame>>8)&0xFF);
+
+    //read data
+    while(len--) {
+        read_byte(data++);
+    }
+
+    //release chip select
+    gpio_set_output(PIN_AD9553_CS, GPIO_LEVEL_HIGH);
+}
+
+static void write_byte(u8 data)
+{   
+    u8 mask = 0x80;
+
+    gpio_set_direction(PIN_SIO_DATA, GPIO_DIR_OUT);
+    
+    gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_LOW);
+    __delay_us(1);
+	//write 8bit
+    while(mask) {
+        if(data&mask) {
+            gpio_set_output(PIN_SIO_DATA, GPIO_LEVEL_HIGH);
+        } else {
+            gpio_set_output(PIN_SIO_DATA, GPIO_LEVEL_LOW);
+        }
+        __delay_us(1);
+        gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_HIGH);
+        __delay_us(1);
+        gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_LOW);
+        __delay_us(1);
+        //next bit
+        mask >>= 1;
+    }
+    
+    gpio_set_direction(PIN_SIO_DATA, GPIO_DIR_IN);
+}
+
+static void read_byte(u8 *data)
+{   
+    //printf("0x%08lX\n", value);
+    u8 mask = 0x80;
+
+	//read 8bit
+    while(mask) {
+        gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_HIGH);
+        __delay_us(1);
+        if(gpio_get_input(PIN_SIO_DATA)) {
+            *data |= mask;
+        }
+        __delay_us(1);
+        gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_LOW);
+        __delay_us(1);
+        //next bit
+        mask >>= 1;
+    }
+}
diff --git a/src/driver/ad9553.h b/src/driver/ad9553.h
new file mode 100644
--- /dev/null
+++ b/src/driver/ad9553.h
@@ -0,0 +1,7 @@
+#ifndef __AD9553_H__
+#define __AD9553_H__
+
+extern void ad9553_init(void);
+extern void ad9553_set_freq(u32 freq);
+
+#endif //__AD9553_H__
diff --git a/src/driver/adf4351.c b/src/driver/adf4351.c
--- a/src/driver/adf4351.c
+++ b/src/driver/adf4351.c
@@ -1,9 +1,6 @@
 #include <config.h>
-#include <pinmap.h>
-#include <mtstd/errorcodes.h>
-#include <xc.h>
 #include <string.h>
 #include <stdio.h>
 
 #include "adf4351.h"
 
@@ -5,8 +2,9 @@
 #include <string.h>
 #include <stdio.h>
 
 #include "adf4351.h"
 
+#include <pinmap.h>
 
 //
 //prototypes
@@ -380,8 +378,8 @@
     //printf("0x%08lX\n", value);
     u32 mask = 0x80000000ULL;
 
-    gpio_set_output(PIN_ADF_CLK, GPIO_LEVEL_LOW);
+    gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_LOW);
     __delay_us(1);
 	//write 32bit
     while(mask) {
         if(value&mask) {
@@ -384,6 +382,6 @@
     __delay_us(1);
 	//write 32bit
     while(mask) {
         if(value&mask) {
-            gpio_set_output(PIN_ADF_DATA, GPIO_LEVEL_HIGH);
+            gpio_set_output(PIN_SIO_DATA, GPIO_LEVEL_HIGH);
         } else {
@@ -389,4 +387,4 @@
         } else {
-            gpio_set_output(PIN_ADF_DATA, GPIO_LEVEL_LOW);
+            gpio_set_output(PIN_SIO_DATA, GPIO_LEVEL_LOW);
         }
         __delay_us(1);
@@ -391,4 +389,4 @@
         }
         __delay_us(1);
-        gpio_set_output(PIN_ADF_CLK, GPIO_LEVEL_HIGH);
+        gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_HIGH);
         __delay_us(1);
@@ -394,5 +392,5 @@
         __delay_us(1);
-        gpio_set_output(PIN_ADF_CLK, GPIO_LEVEL_LOW);
+        gpio_set_output(PIN_SIO_CLK, GPIO_LEVEL_LOW);
         __delay_us(1);
         //next bit
         mask >>= 1;
diff --git a/src/driver/base/i2c.c b/src/driver/base/i2c.c
--- a/src/driver/base/i2c.c
+++ b/src/driver/base/i2c.c
@@ -1,5 +1,4 @@
 #include <config.h>
-#include <mtstd/errorcodes.h>
 #include "i2c.h"
 
 //
diff --git a/src/driver/gpio.h b/src/driver/gpio.h
--- a/src/driver/gpio.h
+++ b/src/driver/gpio.h
@@ -22,8 +22,11 @@
 typedef const gpio_pin_def *gpio_pin;
 
 //helper macros
-#define GPIO_DEFINE_PIN(name, port, pin) \
-	static const gpio_pin_def name##_DEF = {&PORT##port, &TRIS##port, (1<<pin)}; \
-	static const gpio_pin     name       = &name##_DEF;
+#define GPIO_DEFINE_PIN_C(name, port, pin) \
+	const gpio_pin_def name##_DEF = {&PORT##port, &TRIS##port, (1<<pin)}; \
+	const gpio_pin     name       = &name##_DEF;
+
+#define GPIO_DEFINE_PIN_H(name) \
+	extern const gpio_pin     name;
 
 //gpio functions
@@ -28,15 +31,14 @@
 
 //gpio functions
-static inline void gpio_set_direction(gpio_pin pin, u8 out) {
-	if(out) *(pin->pTRIS) &= ~pin->mask;
-	else    *(pin->pTRIS) |= pin->mask;
-}
-static inline void gpio_set_output(gpio_pin pin, u8 out) {
-	if(out) *(pin->pPORT) |=  pin->mask;
-	else    *(pin->pPORT) &= ~pin->mask;
-}
-static inline u8 gpio_get_input(gpio_pin pin) {
-	return (*(pin->pPORT) & pin->mask) != 0;
-}
+#define gpio_set_direction(pin, dir) \
+        if(dir) { *(pin->pTRIS) &= ~pin->mask; } \
+        else    { *(pin->pTRIS) |= pin->mask; }
+
+#define gpio_set_output(pin, lvl) \
+        if(lvl) { *(pin->pPORT) |=  pin->mask; } \
+        else    { *(pin->pPORT) &= ~pin->mask; }
+
+#define gpio_get_input(pin) ((*(pin->pPORT) & pin->mask) != 0)
+
 
 #endif // __DRIVER_GPIO_H__
diff --git a/src/driver/lnb.c b/src/driver/lnb.c
--- a/src/driver/lnb.c
+++ b/src/driver/lnb.c
@@ -11,6 +11,8 @@
 {
     int res = i2c_probe_addr(i2c, addr);
     if(res == 0) {
+        u8 value;
+
         //14V 0x04
         //18V 0x08
         res = smbus8_write_byte(i2c, addr, LNB_REG_DATA1, 0x84);
@@ -14,6 +16,17 @@
         //14V 0x04
         //18V 0x08
         res = smbus8_write_byte(i2c, addr, LNB_REG_DATA1, 0x84);
+        if(res != 0) return res;
+        res = smbus8_read_byte(i2c, addr, LNB_REG_DATA4, &value);
+        if(res != 0) return res;
+        value |= (1<<6) | (1<<3);
+        res = smbus8_write_byte(i2c, addr, LNB_REG_DATA4, value);
+        if(res != 0) return res;
+        res = smbus8_read_byte(i2c, addr, LNB_REG_DATA3, &value);
+        if(res != 0) return res;
+        value |= (1<<2) | (1<<6);
+        res = smbus8_write_byte(i2c, addr, LNB_REG_DATA3, value);
+        if(res != 0) return res;
     } else {
         printf("LNB Chip not found!\n");
     }
