diff --git a/nbproject/configurations.xml b/nbproject/configurations.xml
--- a/nbproject/configurations.xml
+++ b/nbproject/configurations.xml
@@ -14,6 +14,7 @@
         <itemPath>src/driver/usart.h</itemPath>
         <itemPath>src/driver/irq.h</itemPath>
         <itemPath>src/driver/gpio.h</itemPath>
+        <itemPath>src/driver/ad9553.h</itemPath>
       </logicalFolder>
       <logicalFolder name="mtcrt" displayName="mtcrt" projectFiles="true">
         <itemPath>src/mtcrt/types.h</itemPath>
@@ -40,5 +41,6 @@
         <itemPath>src/driver/lnb.c</itemPath>
         <itemPath>src/driver/usart.c</itemPath>
         <itemPath>src/driver/irq.c</itemPath>
+        <itemPath>src/driver/ad9553.c</itemPath>
       </logicalFolder>
       <itemPath>src/main.c</itemPath>
@@ -43,5 +45,6 @@
       </logicalFolder>
       <itemPath>src/main.c</itemPath>
+      <itemPath>src/pinmap.c</itemPath>
     </logicalFolder>
     <logicalFolder name="ExternalFiles"
                    displayName="Important Files"
diff --git a/src/driver/ad9553.c b/src/driver/ad9553.c
new file mode 100644
--- /dev/null
+++ b/src/driver/ad9553.c
@@ -0,0 +1,111 @@
+#include <config.h>
+#include <pinmap.h>
+#include <stdio.h>
+
+#include "ad9553.h"
+
+//internal helper
+static void write_data(u16 addr, const u8 *data, int len);
+static void read_data(u16 addr, u8 *data, int len);
+static void write_byte(u8 data);
+static void read_byte(u8 *data);
+
+void ad9553_init(void)
+{
+    u8 data[10];
+    
+    read_data(0x00, data, 10);
+    
+    for(int i=0;i<10;i++) {
+        printf("0x%02X: 0x%02X\n", i, data[i]);
+    }
+}
+
+static void write_data(u16 addr, const u8 *data, int len)
+{
+    u16 frame = ((u16)len<<13) | (addr&0x1FFF) | 3;
+    
+    //set chip select
+    gpio_set_lvl_low(PIN_AD9553_CS);
+    __delay_us(1);
+    
+    //write start frame
+    write_byte((frame>>0)&0xFF);
+    write_byte((frame>>8)&0xFF);
+
+    //write data
+    while(len--) {
+        write_byte(*data++);
+    }
+
+    //release chip select
+    gpio_set_lvl_high(PIN_AD9553_CS);
+}
+
+static void read_data(u16 addr, u8 *data, int len)
+{
+    u16 frame = (1u<<15) | ((u16)len<<13) | (addr&0x1FFF) | 3;
+    
+    //set chip select
+    gpio_set_lvl_low(PIN_AD9553_CS);
+    __delay_us(1);
+
+    //write start frame
+    write_byte((frame>>0)&0xFF);
+    write_byte((frame>>8)&0xFF);
+
+    //read data
+    while(len--) {
+        read_byte(data++);
+    }
+
+    //release chip select
+    gpio_set_lvl_high(PIN_AD9553_CS);
+}
+
+static void write_byte(u8 data)
+{   
+    u8 mask = 0x80;
+
+    gpio_set_dir_out(PIN_SIO_DATA);
+    
+    gpio_set_lvl_low(PIN_SIO_CLK);
+    __delay_us(1);
+	//write 8bit
+    while(mask) {
+        if(data&mask) {
+            gpio_set_lvl_high(PIN_SIO_DATA);
+        } else {
+            gpio_set_lvl_low(PIN_SIO_DATA);
+        }
+        __delay_us(1);
+        gpio_set_lvl_high(PIN_SIO_CLK);
+        __delay_us(1);
+        gpio_set_lvl_low(PIN_SIO_CLK);
+        __delay_us(1);
+        //next bit
+        mask >>= 1;
+    }
+    
+    gpio_set_dir_in(PIN_SIO_DATA);
+}
+
+static void read_byte(u8 *data)
+{   
+    //printf("0x%08lX\n", value);
+    u8 mask = 0x80;
+
+	//read 8bit
+    while(mask) {
+        gpio_set_lvl_high(PIN_SIO_CLK);
+        __delay_us(1);
+        if(gpio_get_input(PIN_SIO_DATA)) {
+            *data |= mask;
+        }
+        __delay_us(1);
+        gpio_set_lvl_low(PIN_SIO_CLK);
+        __delay_us(1);
+        //next bit
+        mask >>= 1;
+    }
+}
diff --git a/src/driver/ad9553.h b/src/driver/ad9553.h
new file mode 100644
--- /dev/null
+++ b/src/driver/ad9553.h
@@ -0,0 +1,7 @@
+#ifndef __AD9553_H__
+#define __AD9553_H__
+
+extern void ad9553_init(void);
+extern void ad9553_set_freq(u32 freq);
+
+#endif //__AD9553_H__
diff --git a/src/driver/i2c_native.c b/src/driver/i2c_native.c
--- a/src/driver/i2c_native.c
+++ b/src/driver/i2c_native.c
@@ -6,7 +6,8 @@
  */
 #include <config.h>
 #include <string.h>
+#include <stdio.h>
 #include "i2c_native.h"
 
 //config
 #define I2C_TIMEOUT_INT		 2500 //us
@@ -9,8 +10,8 @@
 #include "i2c_native.h"
 
 //config
 #define I2C_TIMEOUT_INT		 2500 //us
-#define I2C_TIMEOUT_BUSFREE	10000 //us
+#define I2C_TIMEOUT_BUSFREE	100000 //us
 
 //prototypes
 static void i2c_reset(i2c_data_native *ctx);
@@ -66,6 +67,7 @@
 		__delay_us(1);
 		if(--timeout == 0) {
 			//-> timeout
+            printf("!");
 			return ERROR_TIMEOUT;
 		}
 	}
@@ -82,6 +84,7 @@
 		__delay_us(1);
 		if(--timeout == 0) {
 			//-> timeout
+            printf("err %i %i", PIR1bits.SSPIF, SSPCON1bits.WCOL);
 			return ERROR_TIMEOUT;
 		}
 	}
@@ -139,6 +142,7 @@
 	//wait until stop-codition is generated
 	if(i2c_wait_int(I2C_TIMEOUT_BUSFREE)) {
 		//error -> reset bus
+        printf("-");
 		i2c_reset(ctx);
 	}
 }
